name: Build and Push cli2rest-rnaview image

on:
  schedule:
    # Run daily at 1:00 UTC
    - cron: '0 1 * * *'
  workflow_dispatch:  # Allow manual triggering
  pull_request:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest RNAView tag
        id: get_version
        run: |
          # Fetch tags, sort by version, get the last one, extract the tag name, remove ^{} if present
          # Note: RNAView tags might not follow semver, using refname sort. Adjust if needed.
          LATEST_TAG=$(git ls-remote --tags --sort="v:refname" https://github.com/rcsb/RNAView.git | tail -n1 | sed 's/.*\///; s/\^{}//')
          if [ -z "$LATEST_TAG" ]; then
            echo "Error: Could not fetch RNAView version tag."
            # Fallback or exit? Let's try a default/fallback for now if tags are unreliable
            # LATEST_TAG="latest_build_$(date +%Y%m%d)" # Example fallback
            # exit 1 # Or exit if tag is mandatory
            # For now, let's assume tags exist and fail if not found
             exit 1
          fi
          echo "Latest RNAView tag: $LATEST_TAG"
          echo "version=$LATEST_TAG" >> $GITHUB_OUTPUT
        shell: bash

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/tzok/cli2rest-rnaview
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.get_version.outputs.version }} # Add the fetched tag
            type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./rnaview
          push: ${{ github.event_name != 'pull_request' }}
          load: true
          # Pass the fetched tag as a build argument
          build-args: |
            RNAVIEW_VERSION=${{ steps.get_version.outputs.version }}
          tags: |
            cli2rest-rnaview:test
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          docker run --name cli2rest-rnaview-test -d -p 8000 cli2rest-rnaview:test
          sleep 5 # Wait for container to start
          HOST_PORT=$(docker port cli2rest-rnaview-test 8000 | cut -d: -f2)
          curl -s "http://localhost:$HOST_PORT/health" | grep '"status":"healthy"'

          pip install .
          curl -L -o 1ehz.pdb https://files.rcsb.org/download/1EHZ.pdb

          cli2rest-bio --api-url http://localhost:$HOST_PORT src/cli2rest_bio/configs/rnaview/config-pdb.yaml 1ehz.pdb

          for f in rnaview-1ehz-input.pdb.out rnaview-1ehz-stdout.txt rnaview-1ehz-stderr.txt; do
            if [ ! -f "$f" ]; then
              echo "Test failed: Output file $f is missing."
              ls -l
              exit 1
            fi
          done
          echo "Test passed: All output files created."

          docker stop cli2rest-rnaview-test
