name: Build and Push cli2rest-fr3d image

on:
  schedule:
    # Run daily at 1:00 UTC
    - cron: '0 1 * * *'
  workflow_dispatch:  # Allow manual triggering
  pull_request:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false # Allow other matrix jobs to continue if one fails
      matrix:
        branch: [latest, master] # Branches to build from FR3D repo

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Get current date
        id: date
        run: echo "DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./fr3d
          push: ${{ github.event_name != 'pull_request' }}
          load: true
          build-args: |
            FR3D_BRANCH=${{ matrix.branch }}
          tags: |
            ghcr.io/tzok/cli2rest-fr3d:test-${{ matrix.branch }}
            ghcr.io/tzok/cli2rest-fr3d:${{ matrix.branch }}-${{ env.DATE }}
            ghcr.io/tzok/cli2rest-fr3d:${{ matrix.branch }}
            ${{ matrix.branch == 'latest' && format('ghcr.io/tzok/cli2rest-fr3d:latest') || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          docker run --name cli2rest-fr3d-test-${{ matrix.branch }} -d -p 8000 ghcr.io/tzok/cli2rest-fr3d:test-${{ matrix.branch }}
          sleep 5 # Wait for container to start
          HOST_PORT=$(docker port cli2rest-fr3d-test-${{ matrix.branch }} 8000 | cut -d: -f2)
          curl -s "http://localhost:$HOST_PORT/health" | grep '"status":"healthy"'

          pip install .
          curl -L -o 1ehz.cif https://files.rcsb.org/download/1EHZ.cif

          cli2rest-bio --api-url http://localhost:$HOST_PORT src/cli2rest_bio/configs/fr3d/config.yaml 1ehz.cif

          for f in fr3d-1ehz-stdout.txt fr3d-1ehz-stderr.txt fr3d-1ehz-basepair_detail.txt fr3d-1ehz-stacking.txt fr3d-1ehz-backbone.txt; do
            if [ ! -f "$f" ]; then
              echo "Test failed: Output file $f is missing."
              ls -l
              exit 1
            fi
          done
          echo "Test passed: All output files created."

          docker stop cli2rest-fr3d-test-${{ matrix.branch }}
